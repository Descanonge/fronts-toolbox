
[build-system]
requires = ['setuptools>=64', 'setuptools-scm>=8']
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']

name = 'fronts-toolbox'
authors = [
    {name='Clément Haëck', email='clement.haeck@locean.ipsl.fr'}
]
description = 'Tools to detect fronts'

readme = 'README.md'
requires-python = '>=3.11'
classifiers = [
    'Programming Language :: Python :: 3',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'Topic :: Utilities'
]

dependencies = [
    'numpy>=1.24',
    'numba>=0.57',
]

[project.optional-dependencies]
docs = [
    'sphinx==8.2.*',
    'pydata-sphinx-theme==0.15.*',
    'sphinx-design',
    'sphinx-copybutton',
    'nbsphinx',
    'jupyterlab',
    'ipykernel',
]
tests = [
    'pytest>=7.4',
    'xarray',
    'dask',
    # benchmarks
    'pooch',
    'netcdf4',
    'matplotlib',
    # heterogeneity-index
    'scipy',
    'xarray-histogram',
    # canny
    'scikit-image',
    # 'scipy',
]


[project.urls]
'Homepage' = 'https://github.com/Descanonge/fronts-toolbox'

[tool.setuptools_scm]

[tool.mypy]
ignore_missing_imports = true
exclude = ['^docs/extensions', '^tests']

[tool.ruff]
line-length = 88
target-version = 'py311'
extend-exclude = ['docs/extensions/*.py', 'docs/conf.py', 'tests']

[tool.ruff.lint]
select = [
       'E',  # pycodestyle
       'W',  # pycodestyle
       'I',  # isort
       'N',  # pep8-name
       'B',  # bugbear
       'G',  # flake8-logging-format
       'F',  # pyflakes
       'UP',  #pyupgrade
       'D',  #pydocstyle
       'PL', # pylint
]

ignore = [
       'E226', # missing whitespace around arithmetic operator
       'D203', # one blank line before class
       'D213', # multiline docstring start at 2nd line
       'D417', # not all parameters need doc
       'PLR2004', # magic values
       'PLR0913', # too many arguments
       'PLC0415', # import not top of the file
]

unfixable = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = 'numpy'
